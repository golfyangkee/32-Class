=== 엔디언(Endianness) 개념  ==
* 엔디언(Endianness)이란? :  컴퓨터 시스템의 메모리와 같은 데이터 구조 내에서 다중 바이트 데이터의 바이트 순서를
   나타내는 용어로 데이터가 바이트 단위로 나누어서 메모리에 저장될 때, 그 순서가 엔디언에 의해 결정된다.
* 종류는 ? : 2가지 Big_endian, Little_endian
1) 가장 상위 바이트(Most Significant Byte, MSB)"는 멀티바이트 숫자에서 가장 중요한 바이트를 말한다.

2) MSB 바이트는 그 값이 가장 큰 가중치를 가진다.
 ex) 16진수로 표현된 4바이트(32비트) 숫자 0x12345678에서 MSB -> 0x12

3) 숫자를 다룰 때 비트의 가치는 위치에 따라 결정되며 가장 오른쪽에 있는 비트는 "가장 하위 비트(Least Significant Bit, LSB)"로,
그 값은 2의 0제곱, 즉 1의 가치를 가진다.

4)왼쪽으로 한 칸씩 옮길 때마다 그 비트의 가치는 2의 거듭제곱만큼 증가하며 가장 왼쪽에 있는 비트는 그 숫자에서 가장 큰 가치를 가지고 있으며,
 이를 "가장 상위 비트"라고 부르며 이 비트가 포함된 바이트를 "가장 상위 바이트"라고 말한다.

5)멀티바이트 숫자에서 MSB는 숫자의 크기를 가장 크게 결정한다.
ex)0x12345678에서 0x12를 변경하면 숫자의 전체 크기가 크게 달라지지만, LSB인 0x78을 변경해도 전체 크기는 상대적으로 변함이 적다

6)<<빅 엔디언 방식에서는 이 MSB가 메모리의 가장 낮은 주소에 위치하고, 리틀 엔디언 방식에서는 LSB가 가장 낮은 주소에 위치한다.>>

7)엔디언(Endianness) 은  시스템간 데이터 교환, 파일 포맷, 프로그램 소프트 개발, 하드웨어 설계 및 디버깅 , 다중연산
  다중 바이트 연산 , 크로스 -플랫폼 개발에 사용되며 추상화레이어어 히든되지만 네트워킹, 시스템프로그래밍, 임베딩 시스템개발시에
  매우 중요한 개념이다.

  #  chr, ord, bytearray, str를 사용해서 문제를 풀자.
  # "우리나라 대한민국, 2023년 11월 08일" 문장에서 숫자만 추출해서 합을 구하고 문자로 바꾸어서 출력해보자.

int 클래스의 메소드

1) 클래스명.from_bytes(bytes, byteorder='big', *, signed=False)            self가 없으면
2) 객체(값).to_bytes(self, /, length=1, byteorder='big', *, signed=False)  self가 있으면