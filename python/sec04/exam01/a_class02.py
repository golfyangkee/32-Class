'''
a,b라는 변수를 Test라는 이름의 자료형을 등록하고 싶다.
선언 -> 객체생성 -> 멤버호출 (값 전달 및 변경 리턴)
    a       b       --------------- Test
    100     200     t1 레코드 방
    300     400     t2 레코드 방
    500     600     t2 레코드 방
'''
# [1] 선언
class Test:
    # 변수를 선언하고 초기화 하는 메소드 (생성자) -> 객체를 생성할 때 단 한번만 호출된다. / 명시호출하지 않는다.    # int(a,b) == a,b 이렇게 선언해도 된다.
    def __init__(self, a, b):   # 나만의 자료형 만들기 (self 는 예약되어 있는 예약어가 아니다 키워드 리스트에 없는 애라 변수처럼 씀)
                                # 첫번째 자리에는 히든으로 self라고 명시하는 것 /
                                # this: 현재 오브젝트를 지칭하는 연산자 인데 this말고 self라고 쓴다.
                                # self: 현재 오브젝트를 지징하는 변수(연산자x, 키워드x) / 명칭은 상관없다.
                                # __init__: 생성자, 7개 규칙들이 있는데 파이썬은 유연해서
        self.a=a    #테스트멤버변수 = 지역변수
        self.b=b
    def __repr__(self): # 객체 변수(t1,t2등등)를 호출할 때 자동으로 호출된다. 매개인자 받지 않는다. 변수가 너무 많을 때 사용
        return f'{self.a} {self.b}'

if __name__ == '__main__':

    t1=Test(100,200)    # 생성자를 자동으로 호출 객체 생성
    t2 = Test(300,400)
    t3=Test(500,600)
    print(t1.__repr__())   #__repr__ 자동호출하면서 출렬될 멤버 값을 리턴한다. 원래는 주소가 출력되어야 하는데 __repr__덕분에 리턴되어서
    print(t2)
    print(t3)
    print(dir(t1))  # dir(t1)에 있는 a,b는 self.a self.b 이다.